#include <WiFi.h>
#include <PubSubClient.h>
#include <WiFiClientSecure.h>

const char* ssid = "Your_WiFi_SSID";
const char* password = "Your_WiFi_Password";

const char* awsEndpoint = "a26cw8ftcumb8j-ats.iot.us-east-1.amazonaws.com";
const int awsPort = 8883;
const char* awsCert = "certificate.pem.crt";
const char* awsPrivateKey = "private.pem.key";
const char* awsRootCA = "RootCA1.pem";
const char* awsTopic = "esp32/data";

WiFiClientSecure wifiClient;
PubSubClient mqttClient(wifiClient); // Renamed from 'client'

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi connected");

  wifiClient.setCACert(awsRootCA);
  wifiClient.setCertificate(awsCert);
  wifiClient.setPrivateKey(awsPrivateKey);

  mqttClient.setServer(awsEndpoint, awsPort); // Renamed from 'client'
}

void reconnect() {
  while (!mqttClient.connected()) { // Renamed from 'client'
    Serial.println("Attempting MQTT connection...");
    if (mqttClient.connect("ESP32Client")) { // Renamed from 'client'
      Serial.println("Connected to AWS IoT");
    } else {
      Serial.print("Failed to connect, rc=");
      Serial.print(mqttClient.state()); // Renamed from 'client'
      Serial.println(" Retrying in 5 seconds...");
      delay(5000);
    }
  }
}

void loop() {
  if (!mqttClient.connected()) { // Renamed from 'client'
    reconnect();
  }
  mqttClient.loop(); // Renamed from 'client'

  // Publish data to AWS IoT
  String message = "Testing";
  mqttClient.publish(awsTopic, message.c_str()); // Renamed from 'client'

  delay(5000);  // Publish every 5 seconds
}

